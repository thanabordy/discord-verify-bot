const {
  Client,
  GatewayIntentBits,
  Partials,
  Events,
  ButtonBuilder,
  ActionRowBuilder,
  ButtonStyle,
  ModalBuilder,
  TextInputBuilder,
  TextInputStyle,
  InteractionType,
  ChannelType,
  PermissionsBitField,
  EmbedBuilder,
} = require('discord.js');

const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMembers,
    GatewayIntentBits.GuildMessages,
  ],
  partials: [Partials.Channel],
});

const TOKEN = 'MTM2NDQ5ODcyNDQ2MTQ3NzkzMA.GCDO7T.nvBeLHPzSFM6kem0sAN3zAVBbafSXuUsHEa1Jw';
const CLIENT_ID = '1364498724461477930';
const GUILD_ID = '480026073988595732';

client.once(Events.ClientReady, async () => {
  console.log(`‚úÖ Bot ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß!`);

  const guild = await client.guilds.fetch(GUILD_ID);
  await guild.channels.fetch();
  await guild.roles.fetch();

  // üîß ‡∏™‡∏£‡πâ‡∏≤‡∏á role Member ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
  let memberRole = guild.roles.cache.find(r => r.name === 'Member');
  if (!memberRole) {
    memberRole = await guild.roles.create({
      name: 'Member',
      color: 'Blue',
      reason: '‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ',
      permissions: [
        PermissionsBitField.Flags.ViewChannel,
        PermissionsBitField.Flags.SendMessages,
        PermissionsBitField.Flags.ReadMessageHistory,
      ],
    });
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á role Member ‡πÅ‡∏•‡πâ‡∏ß');
  }

  // üîß ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á verify-complete ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
  let completeChannel = guild.channels.cache.find(ch => ch.name === 'verify-complete');
  if (!completeChannel) {
    completeChannel = await guild.channels.create({
      name: 'verify-complete',
      type: ChannelType.GuildText,
      reason: '‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
      permissionOverwrites: [
        {
          id: guild.id,
          allow: ['ViewChannel'],
        },
        {
          id: client.user.id,
          allow: ['SendMessages', 'ViewChannel'],
        },
      ],
    });
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á verify-complete ‡πÅ‡∏•‡πâ‡∏ß');
  }

  // üîß ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á verify ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
  let verifyChannel = guild.channels.cache.find(ch => ch.name === 'verify');
  if (!verifyChannel) {
    verifyChannel = await guild.channels.create({
      name: 'verify',
      type: ChannelType.GuildText,
      reason: '‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô',
      permissionOverwrites: [
        {
          id: guild.id,
          allow: ['ViewChannel'],
          deny: ['SendMessages'],
        },
        {
          id: client.user.id,
          allow: ['SendMessages', 'ViewChannel'],
        },
      ],
    });

    const button = new ButtonBuilder()
      .setCustomId('verify_button')
      .setLabel('‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô')
      .setStyle(ButtonStyle.Success);

    const row = new ActionRowBuilder().addComponents(button);

    await verifyChannel.send({
      content: `üëã ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô`,
      components: [row],
    });

    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á verify ‡πÅ‡∏•‡πâ‡∏ß');
  } else {
    console.log('‚úÖ ‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á verify ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß');
  }
});

client.on(Events.InteractionCreate, async interaction => {
  if (interaction.isButton()) {
    if (interaction.customId === 'verify_button') {
      const modal = new ModalBuilder()
        .setCustomId('verify_modal')
        .setTitle('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì');

      const nameInput = new TextInputBuilder()
        .setCustomId('display_name')
        .setLabel('‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå')
        .setStyle(TextInputStyle.Short)
        .setRequired(true);

      const row = new ActionRowBuilder().addComponents(nameInput);
      modal.addComponents(row);
      await interaction.showModal(modal);
    }
  }

  if (interaction.type === InteractionType.ModalSubmit) {
    if (interaction.customId === 'verify_modal') {
      const name = interaction.fields.getTextInputValue('display_name');

      // ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô
      await interaction.member.setNickname(name).catch(console.error);

      // ‡πÄ‡∏û‡∏¥‡πà‡∏° role Member
      const role = interaction.guild.roles.cache.find(r => r.name === 'Member');
      if (role) {
        await interaction.member.roles.add(role).catch(console.error);
      }

      // ‡∏™‡πà‡∏á embed ‡πÑ‡∏õ‡∏´‡πâ‡∏≠‡∏á verify-complete
      const completeChannel = interaction.guild.channels.cache.find(ch => ch.name === 'verify-complete');
      if (completeChannel && completeChannel.isTextBased()) {
        const embed = new EmbedBuilder()
          .setColor(0x00FF99)
          .setTitle(`üéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢ ${name}!`)
          .setThumbnail(interaction.user.displayAvatarURL({ size: 128 }))
          .addFields(
            { name: 'Discord ID', value: interaction.user.id, inline: true },
          )
          .setFooter({ text: `‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏ô‡∏∏‡∏Å‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå!` });

        await completeChannel.send({ embeds: [embed] });
      }

      await interaction.reply({
        content: `‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢! ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏á <#${completeChannel.id}> ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì`,
        ephemeral: true,
      });
    }
  }
});

client.login(TOKEN);
